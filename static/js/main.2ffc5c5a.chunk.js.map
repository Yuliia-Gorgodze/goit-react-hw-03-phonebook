{"version":3,"sources":["components/styles.module.css","components/Form.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["module","exports","AddNameContact","state","name","number","nameInputId","shortid","generate","numberInputId","inputChange","event","currentTarget","setState","value","addContact","preventDefault","props","formSabmit","resetForm","class","styles","form","onSubmit","this","input","inputValue","type","onChange","buttonAddContact","Component","ContactList","contacts","deleteCantact","contactList","map","id","contactCard","onClick","Filter","App","filter","checkContact","some","contact","toLowerCase","alert","console","log","prevState","getVisibleContact","normalizedFilter","includes","prevProps","localStorage","setItem","JSON","stringify","getItem","parseContacts","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ffc5c5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"styles_contactList__BlUu2\",\"contactCard\":\"styles_contactCard__KLSEs\",\"input\":\"styles_input__aZ3Ic\",\"inputValue\":\"styles_inputValue__eyZt4\",\"buttonAddContact\":\"styles_buttonAddContact__2UGgl\",\"form\":\"styles_form__1F9OW\"};","import React, { Component } from 'react';\r\n import propTypes from 'prop-types';\r\n  import shortid from 'shortid';\r\n  import styles from './styles.module.css'\r\nclass AddNameContact extends Component {\r\n    \r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n    inputChange = event => {\r\n        const {currentTarget} = event;\r\n        this.setState({[currentTarget.name]: currentTarget.value})\r\n    }\r\n    addContact= event => {\r\n    event.preventDefault();\r\n    this.props.formSabmit(this.state)\r\n   \r\n    this.resetForm()\r\n    }\r\n    resetForm = () =>{\r\n    this.setState({name: '', number: ''})\r\n    }\r\n    render(){\r\n        return (\r\n            <form class={styles.form} onSubmit={this.addContact}>\r\n                <label class={styles.input}>\r\n                Введите имя контакта: <input class={styles.inputValue} type='text' name='name' value={this.state.name} onChange={this.inputChange} ></input>\r\n                </label>\r\n                <label class={styles.input}>\r\n                Введите номер контакта: <input class={styles.inputValue} type='text' name='number' value={this.state.number} onChange={this.inputChange} ></input>\r\n                </label>\r\n                <button class={styles.buttonAddContact} type='submit'>Добавить в контакты</button>\r\n            </form>\r\n            \r\n          )\r\n    }\r\n}\r\nexport default AddNameContact;\r\n\r\nAddNameContact.propTypes = {\r\n    formSabmit: propTypes.func\r\n}","\r\nimport React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './styles.module.css'\r\n\r\nconst ContactList = ({contacts, deleteCantact}) => {\r\n \r\n    return(\r\n     <div>\r\n         <ul class={styles.contactList}> \r\n     {contacts.map(({id, name, number})=> <li class={styles.contactCard} key={id}>{name} : {number}\r\n     <button  onClick={() => deleteCantact(id)}>Удалить</button>\r\n     </li>)}\r\n     </ul>\r\n     </div>\r\n    )\r\n}\r\n export default ContactList;\r\n\r\n ContactList.propTypes = {\r\n    contacts: propTypes.array.isRequired,\r\n    deleteCantact: propTypes.func.isRequired\r\n }","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './styles.module.css';\r\n\r\nconst Filter = ({ state, inputChange }) => {\r\n  return (\r\n    <label class={styles.input}>\r\n      Кого ищем?{' '}\r\n      <input\r\n        class={styles.inputValue}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={state}\r\n        onChange={inputChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  state: propTypes.string.isRequired,\r\n  inputChange: propTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n//components\r\nimport AddNameContact from './components/Form';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport styles from './components/styles.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    if (contacts) {\r\n      const parseContacts = JSON.parse(contacts);\r\n      this.setState({ contacts: parseContacts });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  checkContact = name => {\r\n    return this.state.contacts.some(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n  };\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    if (this.checkContact(name)) {\r\n      alert('Такой контакт уже есть !!!!');\r\n      return;\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }));\r\n    }\r\n    console.log(this.state.contacts);\r\n  };\r\n  deleteCantact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n  inputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  getVisibleContact = () => {\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Телефонная книга</h1>\r\n        <AddNameContact formSabmit={this.addContact} />\r\n        <h2>Мои контакты: </h2>\r\n        <Filter inputChange={this.inputChange} state={this.state.filter} />\r\n        <ContactList\r\n          contacts={this.getVisibleContact()}\r\n          deleteCantact={this.deleteCantact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}